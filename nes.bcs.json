{
	"name":"NES Shader",
	"description":"Box Critters now looks like an NES",
	"shaderVersion":"0.2",
	"author":"TumbleGamer,Sarpnt",
	"shader":"#version 300 es\nprecision mediump float;\nin vec2 vPixelCoord;\nout vec4 fColor;\nuniform sampler2D uStageTex;\nuniform vec2 uViewportSize;\n#define COLSLEN 55\n#define PIXELSIZE 2.\n#define rgb(r,g,b) vec3(r,g,b)/255.\n\nvec3[COLSLEN] cols = vec3[COLSLEN](\n\t// x0\n\trgb(124,124,124),\n\trgb(188,188,188),\n\trgb(248,248,248),\n\trgb(252,252,252),\n\t// x1\n\trgb(0,0,252),\n\trgb(0,120,248),\n\trgb(60,188,252),\n\trgb(164,228,252),\n\t// x2\n\trgb(0,0,188),\n\trgb(0,88,248),\n\trgb(104,136,252),\n\trgb(184,184,248),\n\t// x3\n\trgb(68,40,188),\n\trgb(104,68,252),\n\trgb(152,120,248),\n\trgb(216,184,248),\n\t// x4 - Magenta\n\trgb(148,0,132),\n\trgb(216,0,204),\n\trgb(248,120,248),\n\trgb(248,184,248),\n\t// x5 - Pink\n\trgb(168,0,32),\n\trgb(228,0,88),\n\trgb(248,88,152),\n\trgb(248,164,192),\n\t// x6 - Red\n\trgb(168,16,0),\n\trgb(248,66,0),\n\trgb(248,120,88),\n\trgb(240,209,176),\n\t// x7 - Orange\n\trgb(136,20,0),\n\trgb(228,92,16),\n\trgb(252,160,68),\n\trgb(252,224,168),\n\t// x8 - Yellow\n\trgb(80,48,0),\n\trgb(172,124,0),\n\trgb(248,184,0),\n\trgb(248,216,120),\n\t// x9 - Line\n\trgb(0,120,0),\n\trgb(0,184,0),\n\trgb(184,248,24),\n\trgb(216,248,120),\n\t// xA - Green\n\trgb(0,104,0),\n\trgb(0,168,0),\n\trgb(88,216,84),\n\trgb(184,248,184),\n\t// xB - Teal\n\trgb(0,88,0),\n\trgb(0,168,68),\n\trgb(88,248,152),\n\trgb(184,248,216),\n\t// xC - Cyan\n\trgb(0,64,88),\n\trgb(0,136,136),\n\trgb(0,232,216),\n\trgb(0,252,252),\n\t// xD - Black\n\trgb(0,0,0),\n\trgb(120,120,120),\n\trgb(216,216,216)\n);\nvec2 pixelize(vec2 uv) {\n\tvec2 temp = uViewportSize/PIXELSIZE;\n\treturn floor(uv*temp)/temp;\n}\nvec3 closestColor(vec3 color, vec3[COLSLEN] cols) {\n\tfloat bd = 9e9;\n\tvec3 bc;\n\tfor (int i=0;i<COLSLEN;i++) {\n\t\tfloat cd = distance(color, cols[i]);\n\t\tif (cd < bd) {\n\t\t\tbd = cd;\n\t\t\tbc = cols[i];\n\t\t}\n\t}\n\treturn bc;\n}\nvec4 gamma(vec4 color, float gamma) {\n\tcolor.r = pow(color.r, gamma);\n\tcolor.g = pow(color.g, gamma);\n\tcolor.b = pow(color.b, gamma);\n\treturn color;\n}\nvoid main() {\n\tvec4 color = texture(uStageTex,pixelize(vPixelCoord));\n\tcolor = gamma(color, 1.5);\n\tfColor = vec4(closestColor(color.rgb,cols),1);\n}"
}